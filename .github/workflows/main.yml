name: Aula de GCS (PUC CAMPINAS)
run-name: ${{ github.actor }} Projeto de GCS

on: [push]
 
jobs:
  primeiro:
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{ github.event_name }} foi disparado"
      - run: echo " No ${{runner.os}}"
      - run: echo " Repositorio ${{github.repository}} na branch ${{github.ref}}"
      
      - name: Checkout o repositorio
        uses: actions/checkout@v3
      
      - name: Mostrar rodadndo
        run: echo  "teste"
      - name: Mostrar rodadndo
        run: echo "${{ github.event_name }} foi disparado"
      - name: listando conteudo
        run: ls -la ${{ github.workspace }}
      
  Segundo_exemplo:
    permissions: write-all  
    runs-on: ubuntu-latest

    strategy:
     matrix:
      node-version: [18.x]
      # versao 10 e 12 desatualizadas e nao mais em produção
    steps:
      - uses: actions/checkout@v3 
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }} 

      - run: npm ci         
      - run: npm run build --if-present
      - run: npm test
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results
          fail-on-error: false
      - name: Enviando ao Glitch
        uses: kanadgupta/glitch-sync@main
        if: success() || failure()    # run this step even if previous step failed
        with:
          auth-token: '${{ secrets.authToken }}' 
          project-id: '${{ secrets.projectId }}'


  tests:
#    needs: Segundo_exemplo
    runs-on: ubuntu-latest
    name: Run Selenium Tests
    steps:
      - name: Start selenoid
        uses: Xotabu4/selenoid-github-action@v2
         
      - uses: actions/checkout@v3 
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

#      - uses: actions/checkout@v1
      - run: npm ci  
         
   #   - name: Run end to end tests
   #     run: npm run e2e-test
      - name: Run onsite
        run: npm run on-site
      - name: Run etec-print teste
        run: npm run etec-print 
      - name: Run test_mkp
        run: npm run mkp-test
      - name: Run test_mkp_calculate
        run: npm run mkp-calculate
      - name: Run test_mkp_clear
        run: npm run mkp-clear
      - name: Run test_mkp_info
        run: npm run mkp-info
      - name: Run etec2_teste_funcional
        run: npm run etec2_teste_funcional
      # - name: Run onsite2
      #   run: npm run on-site2  # tirado em 14/06 pra ver se roda a action sem erros      
      - name: diretorio
        run: pwd
      - name: lista  
        run: ls -la
        
      - name: fotos da tela
        uses: actions/upload-artifact@v3
        with:
          name: Fotos dos testes
          # Path to the release files          Gravar as fotos na raiz do projeto no docker
          path: /home/runner/work/GCSIC/GCSIC/*.png
# 
#
#

 # segundo:
 ##   runs-on: windows-latest
 #   name: First
 #   steps:      
 #     - name: Criando Variaveis de ambiente
 #       env:
 #         VAR1: Isto é
 ##         VAR2: GitHUB ACtions
 #       run: echo $VAR1 $VAR2
      
 
     






